/*
Асинхронное программирование и обработка ошибок в языке программирование Котлин
как предоствратить блокировку приложении в котлин Потолки Колбекер Футчер Реактивное расширение Корутины
 */

    /*
    Методы решении ожидания
 //Потоки Нити Потоки дорогие поскольку требует требует переключение контекста что дорогостоющим
 Потоки не бесконечны которые могут запускаться ограничены базовой операционной системой
 Потоки не всегда доступны если пишем мультиплатформенное приложение в джава скрипт нельзя использовать

 Колбэки обратные вызовы идея в том что передаем одну функцию в качестве параметров другой функции и вызывать
 функцию после завершения процесса

futere нам обещает что за определенное время вернет ответ

Корутины софт идея в том что функция может оставить свою программу в определенный момент и возобновить позже
  */
    fun post(data: PostData) {
        val token: String = "d=Naruto"

        //val response = sentData(token, data)

//        preparePostAsync{token -> sentData(token as String,data)} колбэки
    }

 fun sentData(token:String,data:PostData){

 }

// fun preparePostAsync(token:(Any) -> Unit){} колбэки
 class PostData{}